name: CI + Ad-hoc Testing Support

on:
  push:
    branches: [ main, develop ]
  pull_request:
  workflow_dispatch:

env:
  NODE_VERSION: '18'

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint --if-present

      - name: Run unit tests
        run: npm run test --if-present

      - name: Build application
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: |
            .next
            out
            dist
            public
            package.json

  deploy-staging:
    name: Deploy to Staging (Vercel or GitHub Pages)
    runs-on: ubuntu-latest
    needs: build
    outputs:
      staging_url: ${{ steps.set-url.outputs.staging_url }}

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build
          path: build_artifact

      # Prefer Vercel if token provided
      - name: Deploy to Vercel (if token set)
        if: ${{ secrets.VERCEL_TOKEN != '' }}
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: .
          alias-domains: ${{ secrets.VERCEL_ALIAS | default('') }}

      - name: Deploy to GitHub Pages (fallback)
        if: ${{ secrets.VERCEL_TOKEN == '' }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build_artifact/out

      - name: Set staging URL output
        id: set-url
        run: |
          # Prefer provided secret STAGING_URL, else placeholder
          if [ -n "${{ secrets.STAGING_URL }}" ]; then
            echo "staging_url=${{ secrets.STAGING_URL }}" >> $GITHUB_OUTPUT
          else
            echo "staging_url=https://staging.example.com" >> $GITHUB_OUTPUT
          fi

  smoke-tests:
    name: Automated Smoke (Playwright)
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright smoke tests (uses STAGING_URL)
        env:
          BASE_URL: ${{ needs.deploy-staging.outputs.staging_url }}
        run: |
          echo "Running smoke tests against $BASE_URL"
          npx playwright test --config=playwright.config.js --project=chromium --reporter=html || true

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report

  notify-testers:
    name: Create Ad-hoc Testing Issue & Notify
    runs-on: ubuntu-latest
    needs: [deploy-staging, build]
    steps:
      - name: Create Ad-hoc testing issue (GitHub)
        uses: peter-evans/create-issue@v4
        with:
          title: "[Ad-hoc] Manual testing required — ${{ github.ref_name }} / ${{ github.sha_short }}"
          labels: ad-hoc, testing, manual
          body: |
            Mô tả: Ứng dụng đã được build và deploy cho ad-hoc testing.
            Staging URL: ${{ needs.deploy-staging.outputs.staging_url }}

            Hướng dẫn nhanh:
            - Mục tiêu session: khám phá tính năng realtime (board sync, multi-user, auth, save/restore).
            - Thời lượng gợi ý: 30-90 phút / session.
            - Ghi lại: bước tái tạo, screenshot, console logs, network requests.
            - Template ghi nhận lỗi: Môi trường / Bước / Kết quả thực tế / Kết quả mong đợi / Severity

            Checklist:
            - [ ] Xác nhận đăng nhập/đăng xuất và chia sẻ board
            - [ ] Kiểm tra đồng bộ nhiều user (vẽ, di chuyển, xóa)
            - [ ] Kiểm tra xử lý khi mạng chậm / disconnect
            - [ ] Kiểm tra thông báo lỗi và recovery

      - name: Optional Slack notify (if webhook set)
        if: ${{ secrets.SLACK_WEBHOOK != '' }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"[Ad-hoc] Build ready for testing: ${{ needs.deploy-staging.outputs.staging_url }}\"}" ${{ secrets.SLACK_WEBHOOK }}

      - name: Upload Ad-hoc session charters template
        uses: actions/upload-artifact@v4
        with:
          name: ad-hoc-charters
          path: |
            .github/testing/ADHOC_CHARTERS.md
            .github/testing/ADHOC_CHECKLIST.md
